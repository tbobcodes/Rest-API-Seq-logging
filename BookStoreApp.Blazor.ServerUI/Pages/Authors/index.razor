@page "/authors/index"

@inject IAuthorService authorService

<h3>index</h3>

@if(Authors == null)
{
    <div class="alert alert-info">
        <h4>Loading Data...</h4>
    </div>
}
else
{
    <a href="/authors/create"><span class="oi oi-plus" aria-hidden="true"></span>Create</a>
    <br />
    <table class="table table-active table-responsive">
        <thead>
            <th>First Name </th>
            <th>Last Name </th>
            <th>Action </th>

        </thead>
        <tbody>
            @foreach(var author in Authors)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <a class="btn btn-primary" href="/authors/details"> <span class="oi oi-book" aria-hidden="true"></span> Details</a>
                        <a class="btn btn-warning" href="/authors/details"> <span class="oi oi-pencil" aria-hidden="true"></span> Edit</a>
                        <a class="btn btn-danger" href="/authors/details"> <span class="oi oi-delete" aria-hidden="true"></span> Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<AuthorReadOnlyDTO> Authors;
    private Response<List<AuthorReadOnlyDTO>> response = new Response<List<AuthorReadOnlyDTO>> {Success = true };

    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.GetAllAuthors();
        if (response.Success)
        {
            Authors = response.Data;
        }
    }
}
